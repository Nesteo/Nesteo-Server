version: 2.1
executors:
  docker-instance:
    environment:
      IMAGE_NAME: nesteo/server
    docker:
      - image: circleci/buildpack-deps:buster
jobs:
  test:
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk:3.0
      - image: circleci/mariadb
        environment:
          MYSQL_ROOT_PASSWORD: root
    steps:
      - checkout
#      - run:
#          name: Run tests
#          command: dotnet test
#          environment:
#            ConnectionStrings__DefaultConnection: "Server=localhost;Database=test;User=root;Password=root"
  build:
    executor: docker-instance
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker build -t $IMAGE_NAME:latest .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  publish-master:
    executor: docker-instance
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG="${CIRCLE_BRANCH}-${CIRCLE_SHA1}"
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$IMAGE_TAG
            docker push $IMAGE_NAME:latest
            docker push $IMAGE_NAME:$IMAGE_TAG
  publish-branch:
    executor: docker-instance
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG="${CIRCLE_BRANCH}-${CIRCLE_SHA1}"
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$CIRCLE_BRANCH
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$IMAGE_TAG
            docker push $IMAGE_NAME:$CIRCLE_BRANCH
            docker push $IMAGE_NAME:$IMAGE_TAG
  publish-tag:
    executor: docker-instance
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG=${CIRCLE_TAG/v/''}
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$IMAGE_TAG
            docker push $IMAGE_NAME:latest
            docker push $IMAGE_NAME:$IMAGE_TAG
workflows:
  version: 2
  build-master:
    jobs:
      - test:
          filters:
            branches:
              only: master
      - build:
          requires:
            - test
          filters:
            branches:
              only: master
      - publish-master:
          requires:
            - build
          filters:
            branches:
              only: master
  build-branch:
    jobs:
      - test:
          filters:
            branches:
              only: /^(?!master$).*/
      - build:
          requires:
            - test
          filters:
            branches:
              only: /^(?!master$).*/
      - publish-branch:
          requires:
            - build
          filters:
            branches:
              only: /.*/
              ignore: master
  build-tag:
    jobs:
      - test:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - build:
          requires:
            - test
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - publish-tag:
          requires:
            - build
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
